check:
  handler: check.main
  description: Checks for package on PyPi via the API
  runtime: python3.7
  layers:
    - arn:aws:lambda:${self:provider.region}:113088814899:layer:Klayers-python37-packaging:1
    - arn:aws:lambda:${self:provider.region}:113088814899:layer:Klayers-python37-requests:4
  timeout: 30
  memorySize: 128
  environment:
    LAYERS_DB: ${self:custom.dbLayers}
  iamRoleStatementsName: ${self:provider.stage}-check
  iamRoleStatements:
    - Effect: Allow
      Action:
      - dynamodb:Query
      Resource: ${self:custom.dbLayersArn}


build:
  handler: build.main
  description: Builds the package inside the lambda using pip
  runtime: python3.8
  timeout: 180
  memorySize: 1024
  environment:
    BUCKET_NAME: ${self:custom.s3LayersName}
    REQS_DB: ${self:custom.dbReqs}
  iamRoleStatementsName: ${self:provider.stage}-build
  iamRoleStatements:
  - Effect: Allow
    Action:
    - s3:PutObject
    - s3:GetObject
    - s3:DeleteObject
    - s3:PutObjectAcl
    - s3:GetObjectAcl
    - s3:AbortMultipartUpload
    Resource: ${self:custom.s3LayersArn}/*
  - Effect: Allow
    Action:
    - s3:ListBucket
    Resource: ${self:custom.s3LayersArn}
  - Effect: Allow
    Action:
    - dynamodb:PutItem
    - dynamodb:Query
    Resource: ${self:custom.dbReqsArn}


deploy:
  handler: deploy.main
  description: Deploys functions to multiple regions
  runtime: python3.7
  layers:
    - arn:aws:lambda:${self:provider.region}:113088814899:layer:Klayers-python37-boto3:2
    - arn:aws:lambda:${self:provider.region}:113088814899:layer:Klayers-python37-packaging:1
  timeout: 600
  memorySize: 384
  environment:
    BUCKET_NAME: ${self:custom.s3LayersName}
    REQS_DB: ${self:custom.dbReqs}
    LAYERS_DB: ${self:custom.dbLayers}
    LAMBDA_PREFIX: ${self:custom.lambdaPrefix}
  iamRoleStatementsName: ${self:provider.stage}-deploy
  iamRoleStatements:
    - Effect: Allow
      Action:
      - dynamodb:GetItem
      - dynamodb:PutItem
      - dynamodb:Query
      - dynamodb:UpdateItem
      Resource: ${self:custom.dbLayersArn}
    - Effect: Allow
      Action:
      - lambda:AddLayerVersionPermission
      - lambda:GetLayerVersion
      Resource: "*"
    - Effect: Allow
      Action:
       - lambda:PublishLayerVersion
      Resource: "*"
    - Effect: Allow
      Action:
      - s3:GetObject
      Resource: ${self:custom.s3LayersArn}/*