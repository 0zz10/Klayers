service: kl

plugins:
  - serverless-iam-roles-per-function
  - serverless-step-functions

provider:
  name: aws
  runtime: python3.8
  stage: ${opt:stage, 'Klayers-defaultp38'}
  region: ${file(../infra/terraform.tfvars.json):aws_region.${self:provider.stage}}
  profile: ${file(../infra/terraform.tfvars.json):aws_profile.${self:provider.stage}}
  versionFunctions: false
  logRetentionInDays: 90
  environment:
    STAGE: ${self:provider.stage}
    LOG_LEVEL: INFO
    DB_NAME: ${self:custom.dbName}
    BUCKET_NAME: ${self:custom.s3LayersName}
  logs:
    httpApi: true
  httpApi:
    cors: true

custom:
  # Env
  awsRegion: ${self:provider.region} 
  lambdaPrefix: ${ssm:/${self:service.name}/${self:provider.stage}/lambda_prefix}
  pipelineName: ${self:service.name}-${self:provider.stage}-pipeline

  # S3
  s3LayersName: ${ssm:/${self:service.name}/${self:provider.stage}/layers_bucket/name}
  s3LayersArn: ${ssm:/${self:service.name}/${self:provider.stage}/layers_bucket/arn}

  # DynamoDB
  dbName: ${ssm:/${self:service.name}/${self:provider.stage}/db/name}
  dbArn: ${ssm:/${self:service.name}/${self:provider.stage}/db/arn}
  dbStreamLabel: ${ssm:/${self:service.name}/${self:provider.stage}/db/stream/label}
  dbStreamArn: ${ssm:/${self:service.name}/${self:provider.stage}/db/stream/arn}

  # Github
  githubSSHKeyParameter: /${self:service.name}/${self:provider.stage}/github_ssh_key
  githubRepo: ${ssm:/${self:service.name}/${self:provider.stage}/github_repo}
  githubWebhookSecret: /${self:service.name}/${self:provider.stage}/github_webhook_secret
  
  # Slack
  slackTokenParameter: /${self:service.name}/${self:provider.stage}/slack_token
  
functions:
  - ${file(sls_components/functions_pipeline.yml)}
  - ${file(sls_components/functions_publish.yml)}
  - ${file(sls_components/functions_invoke_pipeline.yml)}
  - ${file(sls_components/functions_slack.yml)}
  - ${file(sls_components/functions_streams.yml)}
  - ${file(sls_components/functions_webhook.yml)}


stepFunctions:
  stateMachines:
    invoke_pipelines:
      ${file(sls_components/state_machine_invoke_pipelines.yml)}
    pipeline:
      ${file(sls_components/state_machine_pipeline.yml)}
    publish:
      ${file(sls_components/state_machine_publish.yml)}

package:
  exclude:
    - package-lock.json
    - package.json
    - node_modules/**
    - serverless.yml
    - .gitignore
    - .serverless/**
    - sls_components/**
    - README.MD
    - .pytest_cache/**

